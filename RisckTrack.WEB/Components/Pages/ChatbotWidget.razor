@rendermode InteractiveServer
@using RisckTrack.WEB.Services
@inject ChatbotService ChatService

<div class="chatbot-widget">
    @if (!isChatOpen)
    {
        <button class="chatbot-toggle-button" @onclick="ToggleChat">
            <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="currentColor" class="bi bi-chat-dots-fill" viewBox="0 0 16 16">
                <path d="M16 8c0 3.866-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.584.296-1.925.864-4.181 1.234-.2.032-.352-.176-.273-.362.354-.836.674-1.95.77-2.966C.744 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7zM5 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm4 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z" />
            </svg>
        </button>
    }

    @if (isChatOpen)
    {
        <div class="chatbot-window">
            <div class="chatbot-header">
                <span>Asistente Virtual</span>
                <button class="chatbot-close-button" @onclick="ToggleChat">×</button>
            </div>
            <div class="chatbot-messages">
                @* Bucle actualizado para mostrar el avatar solo en los mensajes del bot *@
                @foreach (var message in messages)
                {
                    if (message.IsBot)
                    {
                        <div class="bot-message-wrapper">
                            <img src="/brand-hello-kitty-svgrepo-com.png" alt="Avatar del bot" class="bot-avatar" />
                            <div class="message bot">
                                @((MarkupString)message.Text)
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="message user">
                            @((MarkupString)message.Text)
                        </div>
                    }
                }
            </div>
            <div class="chatbot-input">
                <input type="text" @bind="currentMessage" @onkeydown="HandleKeyDown" placeholder="Escribe tu pregunta..." />
                <button @onclick="SendMessageAsync" aria-label="Enviar mensaje">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-fill" viewBox="0 0 16 16">
                        <path d="M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855H.766l-.452.18a.5.5 0 0 0-.082.887l.41.26.001.002 4.995 3.178 3.178 4.995.002.002.26.41a.5.5 0 0 0 .886-.083l6-15zm-1.833 1.89L6.637 10.07l-4.99-3.176 12.18-5.176z" />
                    </svg>
                </button>
            </div>
        </div>
    }
</div>


@code {
    private bool isChatOpen = false;
    private string currentMessage = string.Empty;
    private List<Message> messages = new List<Message>();

    protected override void OnInitialized()
    {
        messages.Add(new Message("¡Hola! Soy tu asistente virtual. Puedo ayudarte con preguntas sobre la metodología de riesgo. ¿En qué puedo ayudarte?", true));
    }

    private void ToggleChat()
    {
        isChatOpen = !isChatOpen;
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SendMessageAsync();
        }
    }

    private async Task SendMessageAsync()
    {
        if (string.IsNullOrWhiteSpace(currentMessage)) return;

        var userMessage = currentMessage;
        messages.Add(new Message(userMessage, false));
        currentMessage = string.Empty;

        var thinkingMessage = new Message("<div style='display: flex; gap: 4px; align-items: center;'><div class='dot-flashing'></div></div>", true);
        messages.Add(thinkingMessage);
        StateHasChanged();

        var botResponse = await ChatService.GetAnswer(userMessage);

        messages.Remove(thinkingMessage);
        messages.Add(new Message(botResponse, true));

        StateHasChanged();
    }

    public class Message
    {
        public string Text { get; }
        public bool IsBot { get; }

        public Message(string text, bool isBot)
        {
            Text = text;
            IsBot = isBot;
        }
    }
}